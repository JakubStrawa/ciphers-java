/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.mavenproject1;

import java.awt.event.ActionListener;

/**
 *
 * @author kuba
 */
public class EnigmaView extends javax.swing.JFrame {

    /**
     * Creates new form EnigmaFrame
     */
    public EnigmaView() {
        initComponents();
//        etabframe = new EnigmaTableView(reflectorBCheckBox.isSelected(), enigma.getRotorList(), enigma.getPlugBoard());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        messageTextField = new javax.swing.JTextField();
        runButton = new javax.swing.JButton();
        rotorOrderLabel = new javax.swing.JLabel();
        rotor1ComboBox = new javax.swing.JComboBox<>();
        rotor2ComboBox = new javax.swing.JComboBox<>();
        rotor3ComboBox = new javax.swing.JComboBox<>();
        rotorOffsetLabel = new javax.swing.JLabel();
        offset1ComboBox = new javax.swing.JComboBox<>();
        offset2ComboBox = new javax.swing.JComboBox<>();
        offset3ComboBox = new javax.swing.JComboBox<>();
        reflectorBCheckBox = new javax.swing.JCheckBox();
        reflectorCCheckBox = new javax.swing.JCheckBox();
        plugboardScrollPane = new javax.swing.JScrollPane();
        plugboardTextArea = new javax.swing.JTextArea();
        plugboardLabel = new javax.swing.JLabel();
        answerTextField = new javax.swing.JTextField();
        enigmaMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        copyResultMenuItem = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        showTableMenuItem = new javax.swing.JMenuItem();
        gotoMenu = new javax.swing.JMenu();
        caesarMenuItem = new javax.swing.JMenuItem();
        polybiusMenuItem = new javax.swing.JMenuItem();
        blowfishMenuItem = new javax.swing.JMenuItem();
        runMenu = new javax.swing.JMenu();
        runMenuItem = new javax.swing.JMenuItem();
        runSBSCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Enigma");

        messageTextField.setText("Enter your message here");
        messageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageTextFieldActionPerformed(evt);
            }
        });

        runButton.setText("Run");
        runButton.setToolTipText("");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        rotorOrderLabel.setText("Rotor order:");

        rotor1ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "I", "II", "III", "IV", "V" }));
        rotor1ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotor1ComboBoxActionPerformed(evt);
            }
        });

        rotor2ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "I", "II", "III", "IV", "V" }));
        rotor2ComboBox.setSelectedIndex(-1);
        rotor2ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotor2ComboBoxActionPerformed(evt);
            }
        });

        rotor3ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "I", "II", "III", "IV", "V" }));
        rotor3ComboBox.setSelectedIndex(-1);
        rotor3ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotor3ComboBoxActionPerformed(evt);
            }
        });

        rotorOffsetLabel.setText("Rotor offset:");

        offset1ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26" }));

        offset2ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26" }));

        offset3ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26" }));

        reflectorBCheckBox.setSelected(true);
        reflectorBCheckBox.setText("Reflector UKW B");
        reflectorBCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reflectorBCheckBoxActionPerformed(evt);
            }
        });

        reflectorCCheckBox.setText("Reflector UKW C");
        reflectorCCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reflectorCCheckBoxActionPerformed(evt);
            }
        });

        plugboardTextArea.setColumns(20);
        plugboardTextArea.setLineWrap(true);
        plugboardTextArea.setRows(3);
        plugboardTextArea.setText("Enter your plugboard connections, each letter can only be used in one connection");
        plugboardScrollPane.setViewportView(plugboardTextArea);

        plugboardLabel.setText("Plugboard:");

        answerTextField.setText("Press Run to see you answer");

        fileMenu.setText("File");

        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        enigmaMenuBar.add(fileMenu);

        editMenu.setText("Edit");

        copyResultMenuItem.setText("Copy result");
        editMenu.add(copyResultMenuItem);

        enigmaMenuBar.add(editMenu);

        viewMenu.setText("View");

        showTableMenuItem.setText("Show Enigma table");
        showTableMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTableMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(showTableMenuItem);

        gotoMenu.setText("Go to");

        caesarMenuItem.setText("Caesar");
        caesarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caesarMenuItemActionPerformed(evt);
            }
        });
        gotoMenu.add(caesarMenuItem);

        polybiusMenuItem.setText("Polybius");
        polybiusMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                polybiusMenuItemActionPerformed(evt);
            }
        });
        gotoMenu.add(polybiusMenuItem);

        blowfishMenuItem.setText("Blowfish");
        blowfishMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blowfishMenuItemActionPerformed(evt);
            }
        });
        gotoMenu.add(blowfishMenuItem);

        viewMenu.add(gotoMenu);

        enigmaMenuBar.add(viewMenu);

        runMenu.setText("Run");

        runMenuItem.setText("Run");
        runMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runMenuItemActionPerformed(evt);
            }
        });
        runMenu.add(runMenuItem);

        runSBSCheckBoxMenuItem.setText("Run step by step");
        runSBSCheckBoxMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runSBSCheckBoxMenuItemActionPerformed(evt);
            }
        });
        runMenu.add(runSBSCheckBoxMenuItem);

        enigmaMenuBar.add(runMenu);

        setJMenuBar(enigmaMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(plugboardScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(answerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(plugboardLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(rotor3ComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(rotor2ComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(rotor1ComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(89, 89, 89)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(offset2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(offset3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(offset1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(reflectorCCheckBox)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(runButton)
                                                        .addComponent(reflectorBCheckBox))
                                                    .addGap(2, 2, 2)))
                                            .addGap(38, 38, 38)))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(rotorOrderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(61, 61, 61)
                                    .addComponent(rotorOffsetLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 39, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rotorOrderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotorOffsetLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rotor1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(offset1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(runButton)
                        .addGap(18, 18, 18)
                        .addComponent(reflectorBCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reflectorCCheckBox)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotor2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(offset2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotor3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(offset3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(plugboardLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(plugboardScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(answerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runSBSCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runSBSCheckBoxMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_runSBSCheckBoxMenuItemActionPerformed

    private void blowfishMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blowfishMenuItemActionPerformed
        new BlowfishFrame().setVisible(true);
        setVisible(false);
        dispose();
    }//GEN-LAST:event_blowfishMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void caesarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caesarMenuItemActionPerformed
        CaesarModel model = new CaesarModel();
        CaesarView view = new CaesarView();
        CaesarController controller = new CaesarController(model, view);
        view.setVisible(true);
        dispose();
    }//GEN-LAST:event_caesarMenuItemActionPerformed

    private void polybiusMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_polybiusMenuItemActionPerformed
        PolybiusModel model = new PolybiusModel();
        PolybiusView view = new PolybiusView();
        PolybiusController controller = new PolybiusController(model, view);
        view.setVisible(true);
        dispose();
    }//GEN-LAST:event_polybiusMenuItemActionPerformed

    private void messageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageTextFieldActionPerformed

    private void showTableMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTableMenuItemActionPerformed
//        etabframe.setVisible(true);
    }//GEN-LAST:event_showTableMenuItemActionPerformed

    private void reflectorBCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reflectorBCheckBoxActionPerformed
        if (reflectorCCheckBox.isSelected()) {
            reflectorCCheckBox.setSelected(false);   
        }
    }//GEN-LAST:event_reflectorBCheckBoxActionPerformed

    private void reflectorCCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reflectorCCheckBoxActionPerformed
        if (reflectorBCheckBox.isSelected()) {
            reflectorBCheckBox.setSelected(false);   
        }
    }//GEN-LAST:event_reflectorCCheckBoxActionPerformed

    private void rotor1ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotor1ComboBoxActionPerformed
        if (rotor1ComboBox.getSelectedIndex() == rotor2ComboBox.getSelectedIndex() || rotor1ComboBox.getSelectedIndex() == rotor3ComboBox.getSelectedIndex()) {
            rotor1ComboBox.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_rotor1ComboBoxActionPerformed

    private void rotor2ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotor2ComboBoxActionPerformed
        if (rotor1ComboBox.getSelectedIndex() == rotor2ComboBox.getSelectedIndex() || rotor2ComboBox.getSelectedIndex() == rotor3ComboBox.getSelectedIndex()) {
            rotor2ComboBox.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_rotor2ComboBoxActionPerformed

    private void rotor3ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotor3ComboBoxActionPerformed
        if (rotor1ComboBox.getSelectedIndex() == rotor3ComboBox.getSelectedIndex() || rotor2ComboBox.getSelectedIndex() == rotor3ComboBox.getSelectedIndex()) {
            rotor3ComboBox.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_rotor3ComboBoxActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        
//        etabframe.setFlag(reflectorBCheckBox.isSelected());
//        etabframe.setRotors(enigma.getRotorList());
//        etabframe.setPlugboard(enigma.getPlugBoard());
    }//GEN-LAST:event_runButtonActionPerformed

    private void runMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runMenuItemActionPerformed
        runButtonActionPerformed(evt);
    }//GEN-LAST:event_runMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnigmaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnigmaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnigmaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnigmaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EnigmaView().setVisible(true);
            }
        });
    }
    
    public void addRunActionListener(ActionListener a){
        runButton.addActionListener(a);
    }
    public void addRunMenuItemActionListener(ActionListener a){
        runMenuItem.addActionListener(a);
    }
    public void addShowTableActionlistener(ActionListener a){
        showTableMenuItem.addActionListener(a);
    }
    public String getMessage(){
        return messageTextField.getText().trim().toLowerCase();
    }
    public boolean getIfreflectorBUsed(){
        return reflectorBCheckBox.isSelected();
    }
    public int getRotor1Index(){
        return rotor1ComboBox.getSelectedIndex();
    }
    public int getRotor2Index(){
        return rotor2ComboBox.getSelectedIndex();
    }
    public int getRotor3Index(){
        return rotor3ComboBox.getSelectedIndex();
    }
    public int getRotor1Offset(){
        return offset1ComboBox.getSelectedIndex();
    }
    public int getRotor2Offset(){
        return offset2ComboBox.getSelectedIndex();
    }
    public int getRotor3Offset(){
        return offset3ComboBox.getSelectedIndex();
    }
    public String getPlugboard(){
        return plugboardTextArea.getText();
    }
    public void setMessage(String mes){
        answerTextField.setText(mes);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField answerTextField;
    private javax.swing.JMenuItem blowfishMenuItem;
    private javax.swing.JMenuItem caesarMenuItem;
    private javax.swing.JMenuItem copyResultMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuBar enigmaMenuBar;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu gotoMenu;
    private javax.swing.JTextField messageTextField;
    private javax.swing.JComboBox<String> offset1ComboBox;
    private javax.swing.JComboBox<String> offset2ComboBox;
    private javax.swing.JComboBox<String> offset3ComboBox;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JLabel plugboardLabel;
    private javax.swing.JScrollPane plugboardScrollPane;
    private javax.swing.JTextArea plugboardTextArea;
    private javax.swing.JMenuItem polybiusMenuItem;
    private javax.swing.JCheckBox reflectorBCheckBox;
    private javax.swing.JCheckBox reflectorCCheckBox;
    private javax.swing.JComboBox<String> rotor1ComboBox;
    private javax.swing.JComboBox<String> rotor2ComboBox;
    private javax.swing.JComboBox<String> rotor3ComboBox;
    private javax.swing.JLabel rotorOffsetLabel;
    private javax.swing.JLabel rotorOrderLabel;
    private javax.swing.JButton runButton;
    private javax.swing.JMenu runMenu;
    private javax.swing.JMenuItem runMenuItem;
    private javax.swing.JCheckBoxMenuItem runSBSCheckBoxMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JMenuItem showTableMenuItem;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JMenu viewMenu;
    // End of variables declaration//GEN-END:variables
}
